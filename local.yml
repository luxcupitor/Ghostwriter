version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: ghostwriter_local_django
    depends_on:
      - postgres
    volumes:
      - .:/app
#    env_file:
#      - ./.envs/.local/.django
#      - ./.envs/.local/.postgres
    environment:
      - USE_DOCKER=yes
      - IPYTHONDIR=/app/.ipython
      - DJANGO_ACCOUNT_ALLOW_REGISTRATION=False
      - DJANGO_ACCOUNT_EMAIL_VERIFICATION=none
      - DJANGO_ALLOWED_HOSTS=["data.red.lan","localhost","127.0.0.1"]
      - ALLOWED_HOSTS=["data.red.lan","localhost","127.0.0.1"]
      - QCLUSTER_NAME=soar
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ghostwriter
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "8008:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: ghostwriter_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ghostwriter
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    #env_file:
    #  - ./.envs/.local/.postgres

  redis:
    image: redis:5-alpine

  queue:
    <<: *django
    image: ghostwriter_local_queue
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-queue
